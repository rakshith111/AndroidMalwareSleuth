import os
import sys
import json
import subprocess
import pandas as pd
import streamlit as st
import hashlib
sys.path.append(
    os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
sys.path.append(
    os.path.dirname((os.path.abspath(__file__))))
from src.libs.streamlit_libs import *
from src.libs._base_logger import ROOT_DIR,logger,error_logger
from src.libs.color import bcolors



INTENT_HEADER = os.path.join(ROOT_DIR, "dataset_heads",  "ChimeraDatasetIntent_headers.csv")
PERMISSION_HEADER = os.path.join(ROOT_DIR, "dataset_heads","ChimeraDatasetPermission_headers.csv")

intent_permission_extraction_py = os.path.join('src','feature_extraction','intent_extractor','intent_permisson_extractor.py')


def save_apk(uploaded_file):
    print(uploaded_file.name)
    # Calculate hash of the file
    apk_hash = hashlib.md5(uploaded_file.read()).hexdigest()
    # Create a folder with the hash name
    apk_folder = os.path.join(streamlit_temp_apks,apk_hash)
    if not os.path.exists(apk_folder):
        os.makedirs(apk_folder)
    # Save the apk file in the folder
    apk_name=apk_hash+".apk"
    apk_file_path = os.path.join(streamlit_temp_apks,apk_hash,apk_name)
    st.session_state["current_apk_folder"] = apk_folder
    st.session_state["current_apk_hash"] = apk_hash
    st.session_state["current_apk_path"] = apk_file_path
    st.success("APK Saved Successfully at " + apk_file_path)
    with open(apk_file_path, "wb") as f:
        f.write(uploaded_file.getbuffer())
    logger.info(f"{bcolors.OKGREEN}[+] APK saved at {apk_file_path}{bcolors.ENDC}")
    return apk_file_path

def run_intent_extractor(apk_folder, output_directory_path):
    intent_extractor_path = os.path.join('src','feature_extraction','intent_extractor','intentExtractor.exe')
    logger.info(f"{bcolors.OKGREEN}[+] Running Intent Extractor on {apk_folder}{bcolors.ENDC}")
    logger.info(f"{bcolors.OKGREEN}[+] Output directory: {output_directory_path}{bcolors.ENDC}")
    command = f"{intent_extractor_path} {apk_folder} {output_directory_path}"
    # Show output of the command
    print("runp",command)
    subprocess.run(command.split(), stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    logger.info(f"{bcolors.OKGREEN}[+] Intent Extractor finished running{bcolors.ENDC}")


def load_json(json_file_path):
    try:
        with open(json_file_path) as json_file:
            data = json.load(json_file)
        return data
    except Exception as e:
        st.error(f"Error loading JSON file: {e}")
        return None

def run_intent_permission_extraction(apk_folder, output_directory):
    if not os.path.exists(apk_folder ) or not os.path.exists(output_directory):
        st.error("JSON file not found. Please make sure to run the Intent Extractor before loading the JSON file.") 
        return None
    else:
        
        command = f"python {intent_permission_extraction_py} -af {apk_folder} -o {output_directory}"
        print(command)
        subprocess.run(command.split())
        return "Done"



def display_csv_headers(file_path):
    if os.path.exists(file_path):
        df = pd.read_csv(file_path, header=None)
        return df
    else:
        st.error(f"CSV file not found at {file_path}. Please check the file path.")
        return None
    



# App layout

#st.set_page_config(page_title="Intents And Permission Extraction", layout="wide",page_icon="âœ…")
st.title("Intents And Permission Extraction")

st.sidebar.header('User Input/Apk')
apply_custom_css()

uploaded_file = st.sidebar.file_uploader("Upload your input APK file", type=["apk"])



if uploaded_file is not None:
    # Main layout with columns
    left_column, middle_column, right_column = st.columns([2.5, 0.3, 2], gap="large")  

    # Display CSV headers in the right column 
    with right_column:

        intent_headers = display_csv_headers(INTENT_HEADER)
        st.write("Intent Headers:")
        st.write(intent_headers)

        permission_headers = display_csv_headers(PERMISSION_HEADER)
        st.write("Permission Headers:")
        st.write(permission_headers)

    with left_column:

        if st.button("Save APK"):
            st.markdown("### Filename: ")
            st.write(uploaded_file.name)
            apk_file_path = save_apk(uploaded_file)
            output_directory = os.path.join(streamlit_temp_json, "intent_permission",st.session_state["current_apk_hash"])
            st.session_state["current_output_directory"] = output_directory 
            if not os.path.exists(output_directory):
                os.makedirs(output_directory)
        st.markdown("---")

        if st.button("Run Intent Extractor"):
            logger.info(f"{bcolors.OKGREEN}[+] Running Intent Extractor{bcolors.ENDC}")
            run_intent_extractor(st.session_state["current_apk_folder"], st.session_state["current_output_directory"])
            st.success("Intent Extracted Successfully")
        st.markdown("---")

        if st.button("Load JSON"):
            logger.info(f"{bcolors.OKGREEN}[+] Loading JSON file{bcolors.ENDC}")
            json_file_path = os.path.join(streamlit_temp_json,'intent_permission',st.session_state["current_apk_hash"],f'{st.session_state["current_apk_hash"]}.json')
            data = load_json(json_file_path)
            if data:
                st.success("JSON File Loaded Successfully")
                st.write(data)
            else:
                st.error("JSON File Loading Failed")
        st.markdown("---")
    
        if st.button("Clean Extracted Intents & Permissions "):
            logger.info(f"{bcolors.OKGREEN}[+] Cleaning Extracted Intents & Permissions{bcolors.ENDC}")      

            output_directory = os.path.join(streamlit_app_output,st.session_state["current_apk_hash"])
            if not os.path.exists(output_directory):
                os.makedirs(output_directory)
            
            returns = run_intent_permission_extraction(st.session_state["current_apk_folder"], output_directory)
            if returns != None:
                st.success("Intent Permission Extracted Successfully")
            else :
                st.error("Intent Permission Extraction Failed")

        st.markdown("---")

        if st.button("Load Output"):
            output_file_path = os.path.join(streamlit_app_output,st.session_state["current_apk_hash"],'intent_permission',f'{st.session_state["current_apk_hash"]}_IntentPerms.json')
            print(output_file_path)
            output_data = load_json(output_file_path)
            st.success("Output Generated Successfully")
            st.write(output_data)
