def read_output_file(file_path: str) -> list:
    with open(file_path, 'r') as f:
        data = f.read().strip().split('\n')
    return data


def convert_output_to_dict(data: list) -> dict:
    api_data = {}
    for line in data:
        api, count = line.split(':')
        count = count.split(' ')[1]
        api_data[api.strip()] = int(count.strip())
    return api_data


def compare_api_counts(api_data1: dict, api_data2: dict):
    for api in api_data1.keys():
        try:
            if api_data1[api] != api_data2[api]:
                print(f'{api}: {api_data1[api]} files in Original , {api_data2[api]} files in output1.txt')
        except KeyError:
            print(f'{api}: {api_data1[api]} files in Original , 0 files in output1.txt')


if __name__ == '__main__':
    file_path1 = r'FeatureExtraction\Output\output1.txt'
    file_path2 = r'FeatureExtraction\Output\output2.txt'

    data1 = read_output_file(file_path1)
    data2 = read_output_file(file_path2)

    api_data1 = convert_output_to_dict(data1)
    api_data2 = convert_output_to_dict(data2)

    compare_api_counts(api_data1, api_data2)
