import docker
import time
import requests

client = docker.from_env()

model_names = ['mobfs', 'chimera_intents',
               'chimera_permissions', 'chimera_merged']
container_name = "tfmodelv1"
image_name = "rakshithbabu111/android_malware_4_classifier_tf_s:v1.0"   
host = "localhost"
rest_api_port = 8501


def pull_image(image_name):
    print(f"Pulling image: {image_name}")
    client.images.pull(image_name)
    print(f"Image pulled successfully: {image_name}")


def create_container(image_name, container_name):
    print(f"Creating container: {container_name}")
    container = client.containers.create(
        image_name, name=container_name, ports={8500: 8500, 8501: 8501})
    print(f"Container created successfully: {container_name}")
    return container


def start_container(container):
    if container.status != 'running':
        print(f"Starting container: {container.name}")
        container.start()
        print(f"Container started successfully: {container.name}")


def is_model_ready(model_name):
    try:
        response = requests.get(
            f"http://{host}:{rest_api_port}/v1/models/{model_name}/metadata")
        return response.status_code == 200
    except requests.exceptions.RequestException as e:
        print(f"Error pinging model {model_name}: {e}")
        return False


def wait_for_models(model_names):
    print("Waiting for all models to be ready...")
    all_models_ready = False

    while not all_models_ready:
        all_models_ready = all([is_model_ready(model_name)
                               for model_name in model_names])
        if not all_models_ready:
            time.sleep(5)

    print("All models are ready.")


def main():
    try:
        container = client.containers.get(container_name)
    except docker.errors.NotFound:
        pull_image(image_name)
        container = create_container(image_name, container_name)

    start_container(container)
    time.sleep(3)
    wait_for_models(model_names)


if __name__ == "__main__":
    main()
