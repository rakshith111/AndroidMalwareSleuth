
import os
import time
import zipfile
import shutil
from pathlib import Path
from tqdm import tqdm


def progress_bar(iterable, desc=None, total=None):
    with tqdm(total=total, desc=desc) as progress:
        for item in iterable:
            yield item
            progress.update(1)
            # Remove this line if you don't want to add a small delay
            time.sleep(0.01)


def unzip_file(zip_file_path, dest_path):
    with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
        zip_ref.extractall(dest_path)


def process_zip_file(zip_file_path, parent_directory):
    dest_path = parent_directory / zip_file_path.stem
    dest_path.mkdir(parents=True, exist_ok=True)

    unzip_file(zip_file_path, dest_path)

    duplicates_count = 0
    extracted_files_count = 0

    for item in dest_path.glob('*'):
        if item.is_file() and item.suffix == '.zip':
            process_zip_file(item, dest_path)

    for root, _, files in os.walk(dest_path):
        for file in files:
            if file.endswith('.json') or file.endswith('.txt'):
                old_path = Path(root) / file
                new_path = dest_path / file
                count = 1

                while new_path.exists():
                    new_dir = dest_path / f"{new_path.stem}_{count}"
                    new_dir.mkdir(parents=True, exist_ok=True)
                    new_path = new_dir / file
                    count += 1
                    duplicates_count += 1

                shutil.move(old_path, new_path)
                extracted_files_count += 1

    for item in dest_path.glob('*'):
        if item.is_dir():
            shutil.rmtree(item)

    # Remove .txt and .zip files from the output folder
    for ext in ['.txt', '.zip']:
        for file in dest_path.glob(f'*{ext}'):
            file.unlink()

    return extracted_files_count, duplicates_count


if __name__ == '__main__':
    dataset_zip = 'CICMalDroiddataset\Dataset.zip'
    with zipfile.ZipFile(dataset_zip, 'r') as zip_ref:
        zip_ref.extractall('CICMalDroiddataset\Dataset')
    dataset_folder = 'CICMalDroiddataset\Dataset'

    parent_directory = Path(dataset_folder)

    total_extracted_files = 0
    total_duplicates = 0

    for zip_file in progress_bar(parent_directory.glob('*.zip'), desc='Processing zip files',total=len(list(parent_directory.glob('*.zip')))):
        extracted_files, duplicates = process_zip_file(zip_file, parent_directory)
        total_extracted_files += extracted_files
        total_duplicates += duplicates

    print(f"Total extracted files: {total_extracted_files}")
    print(f"Total duplicate files: {total_duplicates}")
