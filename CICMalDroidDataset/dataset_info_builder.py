import json
from pathlib import Path
from collections import defaultdict
from tqdm import tqdm


def collect_values(parent_folders, keys_to_collect):
    hashmap = defaultdict(lambda: defaultdict(int))

    # Iterate over all parent folders and JSON files
    for parent_folder in tqdm(parent_folders, desc="Processing parent folders" , total=len(parent_folders)):
        folder_path = Path(parent_folder)
        for json_file in folder_path.glob('*.json'):
            with open(json_file, 'r') as f:
                json_data = json.load(f)

            for key in keys_to_collect:
                if key in json_data:
                    values = json_data[key]
                    if key == 'intent_actions' or key == 'intent_consts':
                        group = 'intents'
                    elif key == 'permissions':
                        group = 'permissions'
                    elif key == 'sensitive_API':
                        group = 'sensitive_API'
                    else:
                        group = key

                    for value in values:
                        cleaned_value = value.strip("'")  # Remove inner quotes
                        hashmap[group][cleaned_value] += 1

    return hashmap


def save_hashmap(hashmap, output_file):
    with open(output_file, 'w') as f:
        json.dump(hashmap, f, indent=2, ensure_ascii=False)
    print(f"Hashmap saved as {output_file}")

def main():
    target_dir = Path("CICMalDroidDataset/Dataset")
    parent_folders = [target_dir / folder for folder in ['adware', 'benign', 'banking', 'riskware', 'sms']]
    keys_to_collect = ['sensitive_API', 'intent_actions', 'intent_consts', 'permissions']

    hashmap = collect_values(parent_folders, keys_to_collect)
    save_hashmap(hashmap, 'hashmap_output.json')

if __name__ == "__main__":
    main()
