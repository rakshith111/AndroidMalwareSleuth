import re
import os


def extract_patterns(input_file, output_file, pattern):
    '''
    Extracts patterns from a text file and writes them to another text file.

    Args:
        input_file (str): The path to the input text file.
        output_file (str): The path to the output text file.
        pattern (str): The regular expression pattern to search for in the input file.
    '''
    with open(input_file, 'r', encoding="utf-8") as infile:
        content = infile.read()

    # Find all patterns matching the specified regular expression in the input file
    matches = re.findall(pattern, content)

    # Write the matching patterns to the output file, one per line
    with open(output_file, 'w', encoding="utf-8") as outfile:
        for match in matches:
            outfile.write(match + '\n')


if __name__ == "__main__":
    # Set the input file and regular expression pattern to use
    input_file = os.path.join(r"Scrapper\Reports\temp.txt")
    pattern = r'[A-Fa-f0-9]{64}'

    # Prompt the user to enter the base URL to use for generating links
    base_file = os.path.join(r"Scrapper\Reports\generated_links.txt")
    base_url = input("Enter the BASE URL: ")

    # Set the output file to use and extract the patterns from the input file
    output_file = os.path.join(r"Scrapper\Reports\temp_caught.txt")
    extract_patterns(input_file, output_file, pattern)

    # Read the extracted patterns from the output file and generate links with the base URL
    with open(output_file, 'r', encoding="utf-8") as f:
        main_set = set(f.read().splitlines())
    with open(base_file, 'w', encoding="utf-8") as f:
        for i in main_set:
            f.write(base_url+i+".tar.gz")
            f.write("\n")

    # Delete the output file
    os.remove(output_file)

'''
copy paste all the links  which are failed to extract properly from the generated report 
and paste it in temp.txt file and run this script
This will generate a new file with all the links which are not extracted properly
and provide the new file to the downloader script
'''
