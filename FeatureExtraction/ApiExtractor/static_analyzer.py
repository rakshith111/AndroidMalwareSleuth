import os
import subprocess
import argparse

from _base_logger import logger
from jadx_updator import download_latest_jadx


def process_input_folder(app_dir):
    '''
    Finds all the APKs in a directory and genrates full path to each APK
    '''
    if not os.path.exists(app_dir):
        logger.error("[-] The folder does not exist.")
        return
    if not os.path.isdir(app_dir):
        logger.error("[-] The provided path is not a folder.")
        return

    logger.info('[+] Looking for APKs in: {}'.format(app_dir))
    apk_list = []
    for root, dirs, files in os.walk(app_dir):
        for file in files:
            if file.endswith('.apk'):
                apk_list.append(os.path.join(root, file))
                logger.info('[+] Found APK: {}'.format(file))
    logger.info('[+] Total APKs found: {}'.format(len(apk_list)))
    return apk_list


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Process a folder.")
    parser.add_argument(
        "--folder", "--f",  help="Input Path to folder of APKs to be processed", type=str, required=True)
    parser.add_argument("--update","--u",  help="Update jadx to latest version",
                        default=True, type=bool, required=False)
    parser.add_argument("--additional","--a", 
                        help="Additional arguments to be passed to jadx", type=str, required=False)
    args = parser.parse_args()
    download_latest_jadx(False)
    print(process_input_folder(args.folder))

   
