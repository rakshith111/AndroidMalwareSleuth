import sys
import json
import csv
import os
import argparse


def is_standard_intent(intent, standard_intents):
    return intent in standard_intents


def is_standard_permission(permission, standard_permissions):
    return permission in standard_permissions


def convert_to_csv_format(name):
    name = name.lower().replace(".", "dot")
    return name


def load_standard_items(csv_file_path):
    standard_items = set()
    with open(csv_file_path, "r") as csv_file:
        csv_reader = csv.reader(csv_file)
        for row in csv_reader:
            standard_items.add(row[0])
    return standard_items


def process_intents_and_permissions(input_file_path, intents_csv_file_path, permissions_csv_file_path, output_folder_path):
    with open(input_file_path, "r") as file:
        data = json.load(file)

    permissions = set()
    intents = {}
    standard_intents = load_standard_items(intents_csv_file_path)
    standard_permissions = load_standard_items(permissions_csv_file_path)

    for permission in data["usesPermissions"]:
        permission_name = convert_to_csv_format(permission["name"])
        if is_standard_permission(permission_name, standard_permissions):
            permissions.add(permission_name)

    # Process intents from activities, services, and receivers
    for item_type in ["activities", "services", "receivers"]:
        for item in data["application"][item_type]:
            for intent_filter in item.get("intentFilters", []):
                for action in intent_filter.get("actions", []):
                    action_name = convert_to_csv_format(action["name"])
                    if is_standard_intent(action_name, standard_intents):
                        if action_name not in intents:
                            intents[action_name] = 1
                        else:
                            intents[action_name] += 1

    output_data = {
        "permissions": list(permissions),
        "intents": [[intent, count] for intent, count in intents.items()]
    }

    # Generate the output file name
    input_file_name = os.path.basename(input_file_path)
    output_file_name = os.path.splitext(input_file_name)[0] + "_output.json"
    output_file_path = os.path.join(output_folder_path, output_file_name)

    with open(output_file_path, "w") as output_file:
        json.dump(output_data, output_file, indent=2)

    print(f"Generating output file at: {output_file_path}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Extract intents and permissions from a JSON file.")
    parser.add_argument("--input", "-i", help="Path to the input JSON file", type=str, required=True)
    parser.add_argument("--intents_csv", "-ic", help="Path to the standard intents CSV file", type=str, required=True)
    parser.add_argument("--permissions_csv", "-pc", help="Path to the standard permissions CSV file", type=str, required=True)
    parser.add_argument("--output_folder", "-o", help="Path to the output folder", type=str, required=True)

    args = parser.parse_args()

    process_intents_and_permissions(args.input, args.intents_csv, args.permissions_csv, args.output_folder)
